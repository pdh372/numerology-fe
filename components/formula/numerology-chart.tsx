import React from 'react';
import { Button } from '@heroui/button';
import { useDisclosure, Drawer, DrawerBody, DrawerContent, DrawerFooter, DrawerHeader } from '@nextui-org/react';
import { Card, CardBody } from '@heroui/card';

import { useNumerologyStore } from '@/stores/numerology';
import { getChartMatrix } from '@/util/string.util';

const matrixMap = [
  [3, 6, 9],
  [2, 5, 8],
  [1, 4, 7],
];

export const NumerologyChart = () => {
  const { numerology } = useNumerologyStore();
  const { isOpen, onOpen, onOpenChange } = useDisclosure();

  const counts = getChartMatrix(numerology.name);

  const allNumbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];
  const present = Object.keys(counts).map((k) => Number(k));
  const missingNumbers = allNumbers.filter((n) => !present.includes(n));

  const maxCount = Math.max(...Object.values(counts));
  const innerFeelings = Object.entries(counts)
    .filter(([_, v]) => v === maxCount)
    .map(([k]) => Number(k));

  return (
    <div>
      <Card className='flex justify-center flex-col rounded-2xl shadow-2xl bg-white items-center p-2'>
        <CardBody className='space-y-4'>
          <Button
            className='text-xl font-bold text-primary cursor-pointer inline-block border-3 w-full'
            variant='light'
            onPress={onOpen}
          >
            üß≠ Danh ƒê·ªì
          </Button>

          <div className='flex justify-center'>
            <div className='grid grid-cols-3 gap-2 w-fit p-4 bg-white shadow  rounded-2xl relative'>
              {matrixMap.flat().map((num) => (
                <div
                  key={num}
                  className='border border-gray-400 w-20 h-20 flex flex-wrap justify-center items-center text-lg font-bold text-blue-700'
                >
                  {Array(counts[num])
                    .fill(num)
                    .map((n, i) => (
                      <span key={i}>{counts[num] >= 1 ? n : '-'}</span>
                    ))}
                </div>
              ))}
            </div>
          </div>

          <div className='mt-4 text-center space-y-2'>
            <p className='text-sm text-gray-700'>
              <span className='font-semibold'>üîç S·ªë khuy·∫øt:</span>{' '}
              {missingNumbers.length > 0 ? missingNumbers.join(', ') : 'Kh√¥ng c√≥'}
            </p>
            <p className='text-sm text-gray-700'>
              <span className='font-semibold'>üíì S·ªë n·ªôi c·∫£m:</span>{' '}
              {innerFeelings.length > 0 ? innerFeelings.join(', ') : 'Kh√¥ng x√°c ƒë·ªãnh'}
            </p>
          </div>
        </CardBody>
      </Card>

      <Drawer isOpen={isOpen} radius='none' size='sm' onOpenChange={onOpenChange}>
        <DrawerContent>
          {(onClose) => (
            <>
              <DrawerHeader className='flex flex-col gap-1'>üß≠ Danh ƒê·ªì</DrawerHeader>
              <DrawerBody>
                <div className='text-sm p-4 rounded-xl border shadow-sm bg-gray-50'>
                  <p className='font-semibold mb-2 text-gray-800'>üìñ √ù nghƒ©a:</p>
                  <p className='text-gray-700 leading-relaxed'>
                    Ph√¢n t√≠ch danh ƒë·ªì cho ch√∫ng ta th√¥ng tin ch√≠nh v·ªÅ n·ªÅn t·∫£ng t√≠nh c√°ch c·ªßa m·ªôt ng∆∞·ªùi.
                    <br />
                    <br />
                    Khi ph√¢n t√≠ch danh ƒë·ªì, ch√∫ng ta <span className='font-medium'>x√©t t·ª´ng h√†ng ngang</span> v√†
                    <span className='font-medium'> ch·ªâ l·ª±a ch·ªçn nh·ªØng h√†ng m√† c·∫£ 3 √¥ vu√¥ng c√≥ ch·ª©a c√°c con s·ªë</span>.
                    <span className='text-red-600 font-medium'>
                      {' '}
                      N·∫øu h√†ng ngang n√†o khuy·∫øt 1, 2, 0 hay khuy·∫øt c·∫£ 3 √¥ th√¨ b·ªè qua, kh√¥ng x√©t ƒë·∫øn.
                    </span>
                    <br />
                    <br />
                    Nh∆∞ v·∫≠y c≈©ng s·∫Ω c√≥ tr∆∞·ªùng h·ª£p kh√¥ng c√≥ h√†ng ngang n√†o ƒë·∫ßy ƒë·ªß, ta c≈©ng b·ªè qua, kh√¥ng ph√¢n t√≠ch, kh√¥ng
                    nh·∫≠n x√©t ho·∫∑c ƒë√°nh gi√°.
                    <br />
                    <br />
                    N·ªÅn t·∫£ng t√≠nh c√°ch theo danh ƒë·ªì ƒë∆∞·ª£c chia l√†m ba nh√≥m:
                    <span className='font-medium'> L√Ω tr√≠, n·ªÅn t·∫£ng logic</span>;
                    <span className='font-medium'> T√¨nh c·∫£m, c·∫£m x√∫c</span>;
                    <span className='font-medium'> S√°ng t·∫°o, √Ω t∆∞·ªüng</span>.
                  </p>
                </div>
              </DrawerBody>
              <DrawerFooter>
                <Button color='danger' variant='light' onPress={onClose}>
                  ƒê√≥ng
                </Button>
              </DrawerFooter>
            </>
          )}
        </DrawerContent>
      </Drawer>
    </div>
  );
};
